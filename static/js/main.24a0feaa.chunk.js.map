{"version":3,"sources":["components/Button.js","index.js"],"names":["Button","texto","onClick","className","App","React","useState","tarefas","setTarefas","input","setInput","inputRef","useRef","handleClick","event","a","alert","label","id","String","Math","floor","random","current","focus","tasker","elemento","currentTarget","closest","hasAttribute","removeAttribute","setAttribute","excluirTask","getAttribute","index","findIndex","i","splice","type","value","onChange","target","ref","onKeyDown","key","placeholder","length","map","tarefa","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAQeA,EANA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACtB,OACE,wBAAQC,UAAU,gBAAgBD,QAASA,EAASD,MAAOA,EAA3D,SAAmEA,KCEjEG,EAAM,WACV,MAA8BC,IAAMC,SAAS,IAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,IAAMC,SAAS,IAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAIMC,EAAWN,IAAMO,SAQjBC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACJ,KAAVN,GAA0B,MAAVA,EADF,uBAEhBO,MAAM,mCAFU,kBAGT,MAHS,OAKhBR,EAAW,CACT,CACES,MAAOR,EACPS,GAAIC,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,aAHrB,mBAKLf,KAILG,EAAS,IAdO,OAiBlBC,EAASY,QAAQC,QAjBC,2CAAH,sDAoBXC,EAAS,SAAC,GAAuB,IACjCC,EADgC,EAApBC,cACaC,QAAQ,MAErCF,EAASG,aAAa,gBAClBH,EAASI,gBAAgB,gBACzBJ,EAASK,aAAa,eAAgB,KAGtCC,EAAc,SAAC,GAAuB,IACtCd,EADqC,EAApBS,cACEC,QAAQ,MAAMK,aAAa,WAC9CC,EAAQ3B,EAAQ4B,WAAU,SAACC,GAAD,OAAOA,EAAElB,KAAOA,KAE9CX,EAAQ8B,OAAOH,EAAO,GACtB1B,EAAW,YAAID,KAGjB,OACE,iCACE,yCACA,sBAAKJ,UAAU,UAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBACEmC,KAAK,OACLC,MAAO9B,EACPS,GAAG,gBACHsB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB/B,EAAS+B,EAAOF,QAC1CG,IAAK/B,EACLgC,UAAW,SAAC7B,GAAD,MACK,UAAdA,EAAM8B,IAAkB/B,IAAgB,MAE1CgC,YAAY,wBAEd,cAAC,EAAD,CAAQ3C,QAASW,EAAaZ,MAAM,2BAErCM,EAAQuC,OAAS,GAAK,4DACvB,6BACGvC,EAAQwC,KAAI,SAACC,GAAD,OACX,qBAAoB,UAASA,EAAO9B,GAApC,UACE,sBAAKf,UAAU,kBAAf,UACE,sBAAMA,UAAU,aAAaD,QAASuB,EAAtC,SACE,2BAEF,+BAAOuB,EAAO/B,WAEhB,sBAAMd,UAAU,UAAUD,QAAS8B,EAAnC,iBAPOgB,EAAO9B,gBAkB5B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24a0feaa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({texto, onClick}) => {\r\n  return (\r\n    <button className=\"botao-inserir\" onClick={onClick} texto={texto}>{texto}</button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"../src/style.css\";\nimport Button from \"./components/Button\";\n\nconst App = () => {\n  const [tarefas, setTarefas] = React.useState([]);\n  const [input, setInput] = React.useState(\"\");\n\n  // const [clicked, setClicked] = React.useState(\"\");\n\n  const inputRef = React.useRef();\n\n  // React.useEffect(() => {\n  //   if (window.localStorage.getItem(\"list\") !== null) {\n  //     setTarefas([...window.localStorage.getItem(\"list\").split(\",\")]);\n  //   }\n  // }, [clicked]);\n\n  const handleClick = async (event) => {\n    if (input === \"\" || input === \" \") {\n      alert(\"Por favor digite alguma tarefa!\");\n      return null;\n    } else {\n      setTarefas([\n        {\n          label: input,\n          id: String(Math.floor(Math.random() * 1000)),\n        },\n        ...tarefas,\n      ]);\n      // window.localStorage.setItem(\"list\", [...tarefas, input]);\n      // setClicked(true);\n      setInput(\"\");\n    }\n\n    inputRef.current.focus();\n  };\n\n  const tasker = ({ currentTarget }) => {\n    let elemento = currentTarget.closest(\"li\");\n\n    elemento.hasAttribute(\"data-checked\")\n      ? elemento.removeAttribute(\"data-checked\")\n      : elemento.setAttribute(\"data-checked\", \"\");\n  };\n\n  const excluirTask = ({ currentTarget }) => {\n    let id = currentTarget.closest(\"li\").getAttribute(\"data-id\");\n    let index = tarefas.findIndex((i) => i.id === id);\n\n    tarefas.splice(index, 1);\n    setTarefas([...tarefas]);\n  };\n\n  return (\n    <main>\n      <h2>Tarefas</h2>\n      <div className=\"area-ul\">\n        <div className=\"input-area\">\n          <input\n            type=\"text\"\n            value={input}\n            id=\"label-inserir\"\n            onChange={({ target }) => setInput(target.value)}\n            ref={inputRef}\n            onKeyDown={(event) =>\n              event.key === \"Enter\" ? handleClick() : null\n            }\n            placeholder=\"Digite a sua tarefa\"\n          />\n          <Button onClick={handleClick} texto=\"Inserir nova tarefa\" />\n        </div>\n        {tarefas.length < 1 && <span>Nenhuma tarefa inserida!</span>}\n        <ul>\n          {tarefas.map((tarefa) => (\n            <li key={tarefa.id} data-id={tarefa.id}>\n              <div className=\"check-name-area\">\n                <span className=\"check-area\" onClick={tasker}>\n                  <span></span>\n                </span>\n                <span>{tarefa.label}</span>\n              </div>\n              <span className=\"excluir\" onClick={excluirTask}>\n                X\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </main>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}